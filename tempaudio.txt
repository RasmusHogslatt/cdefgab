Error 1:
error[E0382]: use of moved value: `match_result_sender`
  --> src\audio_listener\audio_listener.rs:50:13
   |
16 |         match_result_sender: Sender<bool>,
   |         ------------------- move occurs because `match_result_sender` has type `Sender<bool>`, which does not implement the `Copy` trait
...
33 |                     move |data: &[f32], _| {
   |                     ---------------------- value moved into closure here
...
37 |                             &match_result_sender,
   |                              ------------------- variable moved due to use in closure
...
50 |             match_result_sender,
   |             ^^^^^^^^^^^^^^^^^^^ value used here after move

Error 2:
error[E0277]: cannot multiply `f32` by `&mut f32`
  --> src\audio_player\audio_player.rs:66:43
   |
66 |                 let value = (sample_clock * frequency * 2.0 * PI / sample_rate).sin();
   |                                           ^ no implementation for `f32 * &mut f32`
   |
   = help: the trait `Mul<&mut f32>` is not implemented for `f32`
help: consider dereferencing here
   |
66 |                 let value = (sample_clock * *frequency * 2.0 * PI / sample_rate).sin();
   |                                             +


Error 3:
error[E0382]: borrow of moved value: `notes`
   --> src\gui\gui.rs:246:44
    |
238 |             while let Ok(notes) = receiver.try_recv() {
    |                          ----- move occurs because `notes` has type `std::vec::Vec<musical_structures::Note>`, which does not implement the `Copy` trait
...
242 |                     self.current_notes = Some(notes);
    |                                               ----- value moved here
...
246 |                     *expected_notes = Some(notes.clone());
    |                                            ^^^^^ value borrowed here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
242 |                     self.current_notes = Some(notes.clone());
    |                                                    ++++++++